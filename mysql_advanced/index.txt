
索引
    可类比字典
    排好序的快速查找数据结构
    满足特定查找算法

数据库维护着一个数据结构，
一般以索引文件的形式存储在磁盘上

一般指B树（多路搜索树，不一定是二叉树）

优势：
    提高检索的效率，降低数据库的IO成本
    降低数据排序的成本
劣势：
    索引列也需要占空间
    会降低更新表的速度
    需要花时间研究建立最优秀的索引

索引分类：
    单值索引：一个索引只包含单个列，一个表可能有多个单列索引
    唯一索引：索引列的值必须唯一（字段值唯一）
    复合索引：一个索引包含多个列

创建：
    CREATE [UNIQUE] INDEX index_name ON mytable(columnname(length));
    ALTER mytable ADD [UNIQUE] INDEX [indexname] ON (columnname(length));

删除：
    DROP INDEX [indexName] ON mytable;

查看：
    SHOW INDEX FROM table_name;

索引结构：
    BTree索引
    Hash索引
    full-text索引
    R-tree索引

检索原理：减少IO操作

哪些情况适合建索引：
    主键自动建立唯一索引
    频繁作为查询条件的字段
    查询中与其它表关联的字段
    频繁更新的字段不适合建索引
    where条件里用不到的字段不创建索引
    查询中统计或分组字段

哪些情况不适合建索引：
    表记录太少
    经常增删改的字段
    数据重复且分布均匀的字段

索引的选择性：索引列中不同值的数目与表中记录数的比
选择性越接近于1，索引的效率越高


